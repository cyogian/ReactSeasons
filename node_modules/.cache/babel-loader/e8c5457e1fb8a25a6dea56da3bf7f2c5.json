{"ast":null,"code":"var _jsxFileName = \"/home/cyogian/practiceJS/React.js/seasons/src/index.js\";\nimport \"./index.css\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport Loader from \"./Loader\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      long: null,\n      address: null,\n      appCode: \"7RPWqLqKW0C5u3XQSKrohw\",\n      appId: \"wkVafqaAkhcWml7qHCyo\",\n      errorMessage: null\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        lat: position.coords.latitude,\n        long: position.coords.longitude\n      });\n      fetch(\"https://reverse.geocoder.api.here.com/6.2/reversegeocode.json?app_id=\".concat(this.state.appId, \"&app_code=\").concat(this.state.appCode, \"&mode=retrieveAddresses&prox=\").concat(this.state.lat, \",\").concat(this.state.long)).then(response => {\n        return response.json();\n      }).then(myJson => {\n        let address = myJson.Response.View[0].Result[0].Location.Address;\n        this.setState({\n          address: \"\".concat(address.City, \", \").concat(address.State, \", \").concat(address.Country)\n        });\n      });\n    }, err => this.setState({\n      errorMessage: err.message\n    }));\n  }\n\n  helperFunc() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return React.createElement(\"div\", {\n        className: \"ui loc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui negative message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Oops! \" + this.state.errorMessage)));\n    }\n\n    if (!this.state.errorMessage && !this.state.lat) {\n      return React.createElement(Loader, {\n        message: \"Please accept the location request!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"pre\", {\n      className: \"loc-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Latitude:\"), \" \", this.state.lat, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Longitude:\"), \" \", this.state.long, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Address:\"), \" \", this.state.address)), React.createElement(SeasonDisplay, {\n      lat: this.state.lat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return this.helperFunc();\n  }\n\n}\n\nconst App2 = props => {\n  const _useState = useState(null),\n        lat = _useState.lat,\n        setLat = _useState.setLat;\n\n  const _useState2 = useState(null),\n        long = _useState2.long,\n        setLong = _useState2.setLong;\n\n  const _useState3 = useState(null),\n        address = _useState3.address,\n        setAddress = _useState3.setAddress;\n\n  const _useState4 = useState(null),\n        errorMessage = _useState4.errorMessage,\n        setErrorMessage = _useState4.setErrorMessage;\n\n  const appCode = \"7RPWqLqKW0C5u3XQSKrohw\";\n  const appId = \"wkVafqaAkhcWml7qHCyo\";\n  useEffect(() => {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n      fetch(\"https://reverse.geocoder.api.here.com/6.2/reversegeocode.json?app_id=\".concat(appId, \"&app_code=\").concat(appCode, \"&mode=retrieveAddresses&prox=\").concat(lat, \",\").concat(long)).then(response => {\n        return response.json();\n      }).then(myJson => {\n        let address = myJson.Response.View[0].Result[0].Location.Address;\n        setAddress(\"\".concat(address.City, \", \").concat(address.State, \", \").concat(address.Country));\n      });\n    }, err => setErrorMessage(err.message));\n  }, [lat, lon, setLat, setLong, setErrorMessage, setAddress]);\n\n  const helperFunc = () => {\n    if (errorMessage && lat) {\n      return React.createElement(\"div\", {\n        className: \"ui loc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui negative message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Oops! \" + errorMessage)));\n    }\n\n    if (!errorMessage && !lat) {\n      return React.createElement(Loader, {\n        message: \"Please accept the location request!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"pre\", {\n      className: \"loc-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Latitude:\"), \" \", lat, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Longitude:\"), \" \", long, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Address:\"), \" \", address)), React.createElement(SeasonDisplay, {\n      lat: lat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }));\n  };\n\n  return helperFunc();\n};\n\nReactDOM.render(React.createElement(App2, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 136\n  },\n  __self: this\n}), document.querySelector(\"#root\"));","map":{"version":3,"sources":["/home/cyogian/practiceJS/React.js/seasons/src/index.js"],"names":["React","useState","useEffect","ReactDOM","SeasonDisplay","Loader","App","Component","state","lat","long","address","appCode","appId","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","fetch","then","response","json","myJson","Response","View","Result","Location","Address","City","State","Country","err","message","helperFunc","render","App2","props","setLat","setLong","setAddress","setErrorMessage","lon","document","querySelector"],"mappings":"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","sourcesContent":["import \"./index.css\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport Loader from \"./Loader\";\n\nclass App extends React.Component {\n  state = {\n    lat: null,\n    long: null,\n    address: null,\n    appCode: \"7RPWqLqKW0C5u3XQSKrohw\",\n    appId: \"wkVafqaAkhcWml7qHCyo\",\n    errorMessage: null\n  };\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        this.setState({\n          lat: position.coords.latitude,\n          long: position.coords.longitude\n        });\n        fetch(\n          `https://reverse.geocoder.api.here.com/6.2/reversegeocode.json?app_id=${this.state.appId}&app_code=${this.state.appCode}&mode=retrieveAddresses&prox=${this.state.lat},${this.state.long}`\n        )\n          .then(response => {\n            return response.json();\n          })\n          .then(myJson => {\n            let address = myJson.Response.View[0].Result[0].Location.Address;\n            this.setState({\n              address: `${address.City}, ${address.State}, ${address.Country}`\n            });\n          });\n      },\n      err => this.setState({ errorMessage: err.message })\n    );\n  }\n\n  helperFunc() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return (\n        <div className=\"ui loc\">\n          <div className=\"ui negative message\">\n            <div className=\"header\">{\"Oops! \" + this.state.errorMessage}</div>\n          </div>\n        </div>\n      );\n    }\n    if (!this.state.errorMessage && !this.state.lat) {\n      return <Loader message=\"Please accept the location request!\" />;\n    }\n\n    return (\n      <div>\n        <div className=\"loc\">\n          <pre className=\"loc-details\">\n            <strong>Latitude:</strong> {this.state.lat}\n            <br />\n            <strong>Longitude:</strong> {this.state.long}\n            <br />\n            <strong>Address:</strong> {this.state.address}\n          </pre>\n        </div>\n        <SeasonDisplay lat={this.state.lat} />\n      </div>\n    );\n  }\n\n  render() {\n    return this.helperFunc();\n  }\n}\n\nconst App2 = props => {\n  const { lat, setLat } = useState(null);\n  const { long, setLong } = useState(null);\n  const { address, setAddress } = useState(null);\n  const { errorMessage, setErrorMessage } = useState(null);\n  const appCode = \"7RPWqLqKW0C5u3XQSKrohw\";\n  const appId = \"wkVafqaAkhcWml7qHCyo\";\n\n  useEffect(() => {\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        setLat(position.coords.latitude);\n        setLong(position.coords.longitude);\n        fetch(\n          `https://reverse.geocoder.api.here.com/6.2/reversegeocode.json?app_id=${appId}&app_code=${appCode}&mode=retrieveAddresses&prox=${lat},${long}`\n        )\n          .then(response => {\n            return response.json();\n          })\n          .then(myJson => {\n            let address = myJson.Response.View[0].Result[0].Location.Address;\n            setAddress(`${address.City}, ${address.State}, ${address.Country}`);\n          });\n      },\n      err => setErrorMessage(err.message)\n    );\n  }, [lat, lon, setLat, setLong, setErrorMessage, setAddress]);\n\n  const helperFunc = () => {\n    if (errorMessage && lat) {\n      return (\n        <div className=\"ui loc\">\n          <div className=\"ui negative message\">\n            <div className=\"header\">{\"Oops! \" + errorMessage}</div>\n          </div>\n        </div>\n      );\n    }\n    if (!errorMessage && !lat) {\n      return <Loader message=\"Please accept the location request!\" />;\n    }\n\n    return (\n      <div>\n        <div className=\"loc\">\n          <pre className=\"loc-details\">\n            <strong>Latitude:</strong> {lat}\n            <br />\n            <strong>Longitude:</strong> {long}\n            <br />\n            <strong>Address:</strong> {address}\n          </pre>\n        </div>\n        <SeasonDisplay lat={lat} />\n      </div>\n    );\n  };\n  return helperFunc();\n};\n\nReactDOM.render(<App2 />, document.querySelector(\"#root\"));\n"]},"metadata":{},"sourceType":"module"}