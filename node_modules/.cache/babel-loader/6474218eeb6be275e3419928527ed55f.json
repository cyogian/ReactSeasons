{"ast":null,"code":"var _jsxFileName = \"/home/cyogian/practiceJS/React.js/seasons/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lat: 0,\n      lon: 0,\n      appCode: \"7RPWqLqKW0C5u3XQSKrohw\",\n      appId: \"wkVafqaAkhcWml7qHCyo\"\n    };\n    window.navigator.geolocation.getCurrentPosition(position => {\n      console.log(position);\n      this.setState({\n        lat: position.coords.latitude,\n        lon: position.coords.longitude\n      });\n      fetch(\"https://reverse.geocoder.api.here.com/6.2/reversegeocode.json?app_id=\" + this.state.appId + \"&app_code=\" + this.state.appId + \"&mode=retrieveAddresses&prox=\" + this.state.lat + \",\" + this.state.lon + \",250\").then(function (response) {\n        return response.json();\n      }).then(function (myJson) {\n        console.log(myJson);\n      });\n    }, err => {\n      this.setState({\n        lat: err.message\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Latitude: \", this.state.lat);\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/home/cyogian/practiceJS/React.js/seasons/src/index.js"],"names":["React","ReactDOM","App","Component","constructor","props","state","lat","lon","appCode","appId","window","navigator","geolocation","getCurrentPosition","position","console","log","setState","coords","latitude","longitude","fetch","then","response","json","myJson","err","message","render","document","querySelector"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,GAAG,EAAE,CAAP;AAAUC,MAAAA,GAAG,EAAE,CAAf;AAAkBC,MAAAA,OAAO,EAAE,wBAA3B;AAAqDC,MAAAA,KAAK,EAAE;AAA5D,KAAb;AAEAC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACKC,QAAD,IAAc;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,WAAKG,QAAL,CAAc;AAAEX,QAAAA,GAAG,EAAEQ,QAAQ,CAACI,MAAT,CAAgBC,QAAvB;AAAiCZ,QAAAA,GAAG,EAAEO,QAAQ,CAACI,MAAT,CAAgBE;AAAtD,OAAd;AACAC,MAAAA,KAAK,CAAC,0EAAwE,KAAKhB,KAAL,CAAWI,KAAnF,GACN,YADM,GACO,KAAKJ,KAAL,CAAWI,KADlB,GAEN,+BAFM,GAGN,KAAKJ,KAAL,CAAWC,GAHL,GAGS,GAHT,GAGa,KAAKD,KAAL,CAAWE,GAHxB,GAG4B,MAH7B,CAAL,CAIKe,IAJL,CAIU,UAASC,QAAT,EAAmB;AACrB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OANL,EAOKF,IAPL,CAOU,UAASG,MAAT,EAAiB;AACnBV,QAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AACH,OATL;AAUH,KAdL,EAeKC,GAAD,IAAS;AACL,WAAKT,QAAL,CAAc;AAAEX,QAAAA,GAAG,EAAEoB,GAAG,CAACC;AAAX,OAAd;AACH,KAjBL;AAmBH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgB,KAAKvB,KAAL,CAAWC,GAA3B,CADJ;AAGH;;AA/B6B;;AAiClCN,QAAQ,CAAC4B,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAwBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAxB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { lat: 0, lon: 0, appCode: \"7RPWqLqKW0C5u3XQSKrohw\", appId: \"wkVafqaAkhcWml7qHCyo\"};\n\n        window.navigator.geolocation.getCurrentPosition(\n            (position) => {\n                console.log(position);\n                this.setState({ lat: position.coords.latitude, lon: position.coords.longitude });\n                fetch(\"https://reverse.geocoder.api.here.com/6.2/reversegeocode.json?app_id=\"+this.state.appId+\n                \"&app_code=\"+this.state.appId+\n                \"&mode=retrieveAddresses&prox=\"+\n                this.state.lat+\",\"+this.state.lon+\",250\")\n                    .then(function(response) {\n                        return response.json();\n                    })\n                    .then(function(myJson) {\n                        console.log(myJson);\n                    });\n            },\n            (err) => {\n                this.setState({ lat: err.message });\n            }\n        );\n    }\n\n    render() {\n        return (\n            <div>Latitude: {this.state.lat}</div>\n        );\n    }\n}\nReactDOM.render(<App/>, document.querySelector('#root'));"]},"metadata":{},"sourceType":"module"}