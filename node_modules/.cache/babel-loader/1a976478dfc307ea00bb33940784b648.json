{"ast":null,"code":"var _jsxFileName = \"/home/cyogian/practiceJS/React.js/seasons/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      long: null,\n      address: null,\n      appCode: \"7RPWqLqKW0C5u3XQSKrohw\",\n      appId: \"wkVafqaAkhcWml7qHCyo\",\n      errorMessage: null\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        lat: position.coords.latitude,\n        long: position.coords.longitude\n      });\n      fetch(\"https://reverse.geocoder.api.here.com/6.2/reversegeocode.json?app_id=\".concat(this.state.appId, \"&app_code=\").concat(this.state.appCode, \"&mode=retrieveAddresses&prox=\").concat(this.state.lat, \",\").concat(this.state.long)).then(response => {\n        return response.json();\n      }).then(myJson => {\n        let address = myJson.Response.View[0].Result[0].Location.Address;\n        this.setState({\n          address: \"\".concat(address.City, \", \").concat(address.State, \", \").concat(address.Country)\n        });\n      });\n    }, err => this.setState({\n      errorMessage: err.message\n    }));\n  }\n\n  render() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return React.createElement(\"div\", {\n        className: \"ui container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui negative message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.state.errorMessage)));\n    }\n\n    if (!this.state.errorMessage && !this.state.lat) {\n      return React.createElement(\"div\", {\n        className: \"ui container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui blue message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Loading...\")));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"ui container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"pre\", {\n      style: {\n        borderTop: '2px solid black',\n        borderBottom: '2px solid black',\n        padding: '10px',\n        display: 'block'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Latitude:\"), \"  \", this.state.lat, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Longitude:\"), \" \", this.state.long, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Address:\"), \"   \", this.state.address), React.createElement(SeasonDisplay, {\n      lat: this.state.lat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 73\n  },\n  __self: this\n}), document.querySelector('#root'));","map":{"version":3,"sources":["/home/cyogian/practiceJS/React.js/seasons/src/index.js"],"names":["React","ReactDOM","SeasonDisplay","App","Component","state","lat","long","address","appCode","appId","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","fetch","then","response","json","myJson","Response","View","Result","Location","Address","City","State","Country","err","message","render","borderTop","borderBottom","padding","display","document","querySelector"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\n\nclass App extends React.Component {\n    state = { \n        lat: null, \n        long: null, \n        address: null, \n        appCode: \"7RPWqLqKW0C5u3XQSKrohw\", \n        appId: \"wkVafqaAkhcWml7qHCyo\", \n        errorMessage: null};\n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            (position) => {\n                this.setState({ lat: position.coords.latitude, long: position.coords.longitude });\n                fetch(`https://reverse.geocoder.api.here.com/6.2/reversegeocode.json?app_id=${this.state.appId}&app_code=${this.state.appCode}&mode=retrieveAddresses&prox=${this.state.lat},${this.state.long}`)\n                    .then((response) => {\n                        return response.json();\n                    })\n                    .then((myJson) => {\n                        let address = myJson.Response.View[0].Result[0].Location.Address;\n                        this.setState({ address: `${address.City}, ${address.State}, ${address.Country}`});\n                    });                \n            },\n            err => this.setState({errorMessage: err.message})\n        );\n    }\n\n    render() {\n        if (this.state.errorMessage && !this.state.lat){\n            return (\n                <div className=\"ui container\">\n                    <div className=\"ui negative message\">\n                        <div className=\"header\">                        \n                            {this.state.errorMessage}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        if(!this.state.errorMessage && !this.state.lat){\n            return (\n                <div className=\"ui container\">\n            \n                    <div className=\"ui blue message\">\n                        <div className=\"header\">                        \n                            Loading...\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (\n            <div className=\"ui container\">\n                <pre style={{\n                    borderTop: '2px solid black',\n                    borderBottom: '2px solid black',\n                    padding: '10px',\n                    display: 'block',\n                    }}>\n                    <strong>Latitude:</strong>  {this.state.lat}<br/>\n                    <strong>Longitude:</strong> {this.state.long}<br/>\n                    <strong>Address:</strong>   {this.state.address}\n                </pre>\n                <SeasonDisplay lat={this.state.lat}/>\n            </div>\n            );\n    }\n}\nReactDOM.render(<App/>, document.querySelector('#root'));"]},"metadata":{},"sourceType":"module"}