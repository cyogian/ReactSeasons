{"ast":null,"code":"import _slicedToArray from \"/home/cyogian/practiceJS/React.js/seasons/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cyogian/practiceJS/React.js/seasons/src/index.js\";\nimport \"./index.css\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport Loader from \"./Loader\";\n\nconst App2 = () => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        lat = _useState2[0],\n        setLat = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        long = _useState4[0],\n        setLong = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errorMessage = _useState6[0],\n        setErrorMessage = _useState6[1];\n\n  const _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        address = _useState8[0],\n        setAddress = _useState8[1];\n\n  const appCode = \"7RPWqLqKW0C5u3XQSKrohw\";\n  const appId = \"wkVafqaAkhcWml7qHCyo\";\n  useEffect((lat, long) => {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      setLat(position.coords.latitude);\n      setLong(position.coords.longitude);\n      fetch(\"https://reverse.geocoder.api.here.com/6.2/reversegeocode.json?app_id=\".concat(appId, \"&app_code=\").concat(appCode, \"&mode=retrieveAddresses&prox=\").concat(lat, \",\").concat(long)).then(response => {\n        return response.json();\n      }).then(myJson => {\n        let address = myJson.Response.View[0].Result[0].Location.Address;\n        setAddress(\"\".concat(address.City, \", \").concat(address.State, \", \").concat(address.Country));\n      });\n    }, err => setErrorMessage(err.message));\n  }, [lat, long]);\n\n  const helperFunc = () => {\n    if (errorMessage && !lat) {\n      return React.createElement(\"div\", {\n        className: \"ui loc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui negative message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Oops! \" + errorMessage)));\n    }\n\n    if (!errorMessage && !lat) {\n      return React.createElement(Loader, {\n        message: \"Please accept the location request!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"pre\", {\n      className: \"loc-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Latitude:\"), \" \", lat, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Longitude:\"), \" \", long, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Address:\"), \" \", address)), React.createElement(SeasonDisplay, {\n      lat: lat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  };\n\n  return helperFunc();\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      long: null,\n      address: null,\n      appCode: \"7RPWqLqKW0C5u3XQSKrohw\",\n      appId: \"wkVafqaAkhcWml7qHCyo\",\n      errorMessage: null\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        lat: position.coords.latitude,\n        long: position.coords.longitude\n      });\n      fetch(\"https://reverse.geocoder.api.here.com/6.2/reversegeocode.json?app_id=\".concat(this.state.appId, \"&app_code=\").concat(this.state.appCode, \"&mode=retrieveAddresses&prox=\").concat(this.state.lat, \",\").concat(this.state.long)).then(response => {\n        return response.json();\n      }).then(myJson => {\n        let address = myJson.Response.View[0].Result[0].Location.Address;\n        this.setState({\n          address: \"\".concat(address.City, \", \").concat(address.State, \", \").concat(address.Country)\n        });\n      });\n    }, err => this.setState({\n      errorMessage: err.message\n    }));\n  }\n\n  helperFunc() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return React.createElement(\"div\", {\n        className: \"ui loc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui negative message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Oops! \" + this.state.errorMessage)));\n    }\n\n    if (!this.state.errorMessage && !this.state.lat) {\n      return React.createElement(Loader, {\n        message: \"Please accept the location request!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"pre\", {\n      className: \"loc-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Latitude:\"), \" \", this.state.lat, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Longitude:\"), \" \", this.state.long, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Address:\"), \" \", this.state.address)), React.createElement(SeasonDisplay, {\n      lat: this.state.lat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return this.helperFunc();\n  }\n\n}\n\nReactDOM.render(React.createElement(App2, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 140\n  },\n  __self: this\n}), document.querySelector(\"#root\"));","map":{"version":3,"sources":["/home/cyogian/practiceJS/React.js/seasons/src/index.js"],"names":["React","useState","useEffect","ReactDOM","SeasonDisplay","Loader","App2","lat","setLat","long","setLong","errorMessage","setErrorMessage","address","setAddress","appCode","appId","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fetch","then","response","json","myJson","Response","View","Result","Location","Address","City","State","Country","err","message","helperFunc","App","Component","state","componentDidMount","setState","render","document","querySelector"],"mappings":"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","sourcesContent":["import \"./index.css\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport Loader from \"./Loader\";\n\nconst App2 = () => {\n  const [lat, setLat] = useState(null);\n  const [long, setLong] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [address, setAddress] = useState(null);\n  const appCode = \"7RPWqLqKW0C5u3XQSKrohw\";\n  const appId = \"wkVafqaAkhcWml7qHCyo\";\n\n  useEffect(\n    (lat, long) => {\n      window.navigator.geolocation.getCurrentPosition(\n        position => {\n          setLat(position.coords.latitude);\n          setLong(position.coords.longitude);\n          fetch(\n            `https://reverse.geocoder.api.here.com/6.2/reversegeocode.json?app_id=${appId}&app_code=${appCode}&mode=retrieveAddresses&prox=${lat},${long}`\n          )\n            .then(response => {\n              return response.json();\n            })\n            .then(myJson => {\n              let address = myJson.Response.View[0].Result[0].Location.Address;\n              setAddress(\n                `${address.City}, ${address.State}, ${address.Country}`\n              );\n            });\n        },\n        err => setErrorMessage(err.message)\n      );\n    },\n    [lat, long]\n  );\n\n  const helperFunc = () => {\n    if (errorMessage && !lat) {\n      return (\n        <div className=\"ui loc\">\n          <div className=\"ui negative message\">\n            <div className=\"header\">{\"Oops! \" + errorMessage}</div>\n          </div>\n        </div>\n      );\n    }\n    if (!errorMessage && !lat) {\n      return <Loader message=\"Please accept the location request!\" />;\n    }\n\n    return (\n      <div>\n        <div className=\"loc\">\n          <pre className=\"loc-details\">\n            <strong>Latitude:</strong> {lat}\n            <br />\n            <strong>Longitude:</strong> {long}\n            <br />\n            <strong>Address:</strong> {address}\n          </pre>\n        </div>\n        <SeasonDisplay lat={lat} />\n      </div>\n    );\n  };\n  return helperFunc();\n};\n\nclass App extends React.Component {\n  state = {\n    lat: null,\n    long: null,\n    address: null,\n    appCode: \"7RPWqLqKW0C5u3XQSKrohw\",\n    appId: \"wkVafqaAkhcWml7qHCyo\",\n    errorMessage: null\n  };\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        this.setState({\n          lat: position.coords.latitude,\n          long: position.coords.longitude\n        });\n        fetch(\n          `https://reverse.geocoder.api.here.com/6.2/reversegeocode.json?app_id=${this.state.appId}&app_code=${this.state.appCode}&mode=retrieveAddresses&prox=${this.state.lat},${this.state.long}`\n        )\n          .then(response => {\n            return response.json();\n          })\n          .then(myJson => {\n            let address = myJson.Response.View[0].Result[0].Location.Address;\n            this.setState({\n              address: `${address.City}, ${address.State}, ${address.Country}`\n            });\n          });\n      },\n      err => this.setState({ errorMessage: err.message })\n    );\n  }\n\n  helperFunc() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return (\n        <div className=\"ui loc\">\n          <div className=\"ui negative message\">\n            <div className=\"header\">{\"Oops! \" + this.state.errorMessage}</div>\n          </div>\n        </div>\n      );\n    }\n    if (!this.state.errorMessage && !this.state.lat) {\n      return <Loader message=\"Please accept the location request!\" />;\n    }\n\n    return (\n      <div>\n        <div className=\"loc\">\n          <pre className=\"loc-details\">\n            <strong>Latitude:</strong> {this.state.lat}\n            <br />\n            <strong>Longitude:</strong> {this.state.long}\n            <br />\n            <strong>Address:</strong> {this.state.address}\n          </pre>\n        </div>\n        <SeasonDisplay lat={this.state.lat} />\n      </div>\n    );\n  }\n\n  render() {\n    return this.helperFunc();\n  }\n}\nReactDOM.render(<App2 />, document.querySelector(\"#root\"));\n"]},"metadata":{},"sourceType":"module"}