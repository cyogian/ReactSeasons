{"ast":null,"code":"import _slicedToArray from \"/home/cyogian/practiceJS/React.js/seasons/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/cyogian/practiceJS/React.js/seasons/src/index.js\";\nimport \"./index.css\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport Loader from \"./Loader\";\n\nconst App2 = () => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        lat = _useState2[0],\n        setLat = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        long = _useState4[0],\n        setLong = _useState4[1];\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      long: null,\n      address: null,\n      appCode: \"7RPWqLqKW0C5u3XQSKrohw\",\n      appId: \"wkVafqaAkhcWml7qHCyo\",\n      errorMessage: null\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      this.setState({\n        lat: position.coords.latitude,\n        long: position.coords.longitude\n      });\n      fetch(\"https://reverse.geocoder.api.here.com/6.2/reversegeocode.json?app_id=\".concat(this.state.appId, \"&app_code=\").concat(this.state.appCode, \"&mode=retrieveAddresses&prox=\").concat(this.state.lat, \",\").concat(this.state.long)).then(response => {\n        return response.json();\n      }).then(myJson => {\n        let address = myJson.Response.View[0].Result[0].Location.Address;\n        this.setState({\n          address: \"\".concat(address.City, \", \").concat(address.State, \", \").concat(address.Country)\n        });\n      });\n    }, err => this.setState({\n      errorMessage: err.message\n    }));\n  }\n\n  helperFunc() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return React.createElement(\"div\", {\n        className: \"ui loc\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ui negative message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Oops! \" + this.state.errorMessage)));\n    }\n\n    if (!this.state.errorMessage && !this.state.lat) {\n      return React.createElement(Loader, {\n        message: \"Please accept the location request!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"loc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"pre\", {\n      className: \"loc-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Latitude:\"), \" \", this.state.lat, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Longitude:\"), \" \", this.state.long, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Address:\"), \" \", this.state.address)), React.createElement(SeasonDisplay, {\n      lat: this.state.lat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    return this.helperFunc();\n  }\n\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80\n  },\n  __self: this\n}), document.querySelector(\"#root\"));","map":{"version":3,"sources":["/home/cyogian/practiceJS/React.js/seasons/src/index.js"],"names":["React","useState","useEffect","ReactDOM","SeasonDisplay","Loader","App2","lat","setLat","long","setLong","App","Component","state","address","appCode","appId","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","fetch","then","response","json","myJson","Response","View","Result","Location","Address","City","State","Country","err","message","helperFunc","render","document","querySelector"],"mappings":"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","sourcesContent":["import \"./index.css\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SeasonDisplay from \"./SeasonDisplay\";\nimport Loader from \"./Loader\";\n\nconst App2 = () => {\n  const [lat, setLat] = useState(null);\n  const [long, setLong] = useState(null);\n};\n\nclass App extends React.Component {\n  state = {\n    lat: null,\n    long: null,\n    address: null,\n    appCode: \"7RPWqLqKW0C5u3XQSKrohw\",\n    appId: \"wkVafqaAkhcWml7qHCyo\",\n    errorMessage: null\n  };\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      position => {\n        this.setState({\n          lat: position.coords.latitude,\n          long: position.coords.longitude\n        });\n        fetch(\n          `https://reverse.geocoder.api.here.com/6.2/reversegeocode.json?app_id=${this.state.appId}&app_code=${this.state.appCode}&mode=retrieveAddresses&prox=${this.state.lat},${this.state.long}`\n        )\n          .then(response => {\n            return response.json();\n          })\n          .then(myJson => {\n            let address = myJson.Response.View[0].Result[0].Location.Address;\n            this.setState({\n              address: `${address.City}, ${address.State}, ${address.Country}`\n            });\n          });\n      },\n      err => this.setState({ errorMessage: err.message })\n    );\n  }\n\n  helperFunc() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return (\n        <div className=\"ui loc\">\n          <div className=\"ui negative message\">\n            <div className=\"header\">{\"Oops! \" + this.state.errorMessage}</div>\n          </div>\n        </div>\n      );\n    }\n    if (!this.state.errorMessage && !this.state.lat) {\n      return <Loader message=\"Please accept the location request!\" />;\n    }\n\n    return (\n      <div>\n        <div className=\"loc\">\n          <pre className=\"loc-details\">\n            <strong>Latitude:</strong> {this.state.lat}\n            <br />\n            <strong>Longitude:</strong> {this.state.long}\n            <br />\n            <strong>Address:</strong> {this.state.address}\n          </pre>\n        </div>\n        <SeasonDisplay lat={this.state.lat} />\n      </div>\n    );\n  }\n\n  render() {\n    return this.helperFunc();\n  }\n}\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"]},"metadata":{},"sourceType":"module"}